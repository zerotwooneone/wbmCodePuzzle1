{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","e","setState","target","react_default","a","createElement","onChange","handleInputChanged","bind","type","App_Solution","input","Component","Solution","_this2","inputMap","1","2","3","4","5","6","7","8","9","0","*","#","_this3","split","map","c","array1D","others","length","v","i","ov","oi","concat","toConsumableArray","permutated","permutate2d","cv","ci","array2d","shift","permutate","flat","arr","index","key","JSON","stringify","className","renderCombos","mapInputs","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1281eb03.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = null;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: this.props.value\r\n    }\r\n  }\r\n\r\n  handleInputChanged(e) {\r\n    //console.log('value is', e.target.value)\r\n    this.setState({\r\n      value : e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Input Numpad String (0-9#*)</h1>\r\n        <div>\r\n          <input\r\n            value={this.state.value}\r\n            onChange={this.handleInputChanged.bind(this)}\r\n            type=\"text\" />\r\n        </div>\r\n        <h1>Solution</h1>\r\n        <div>\r\n          <Solution input={this.state.value}></Solution>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Solution extends React.Component {\r\n\r\n  state = null;\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      inputMap: {\r\n        \"1\": [],\r\n        \"2\": ['A', 'B', 'C'],\r\n        \"3\": ['D', 'E', 'F'],\r\n        \"4\": ['G', 'H', 'I'],\r\n        \"5\": ['J', 'K', 'L'],\r\n        \"6\": ['M', 'N', 'O'],\r\n        \"7\": ['P', 'Q', 'R', 'S'],\r\n        \"8\": ['T', 'U', 'V'],\r\n        \"9\": ['W', 'X', 'Y', 'Z'],\r\n        \"0\": [],\r\n        \"*\": [],\r\n        \"#\": [],\r\n      }\r\n    }\r\n  }\r\n\r\n  mapInputs(input) {\r\n    //console.log(input);\r\n    return input\r\n      .split(\"\")\r\n      .map(c => {\r\n        //console.log(c);      \t\r\n        return this.state.inputMap[c];\r\n      });\r\n  }\r\n\r\n  permutate(array1D, others) {\r\n    //console.log(\"currentArr\",JSON.stringify(currentArr));\r\n    //console.log(\"others\",JSON.stringify(others));\r\n\r\n    if (!array1D.length ||\r\n      !others.length) {\r\n      return [];\r\n    }\r\n\r\n    if (others.length === 1) {\r\n      return array1D.map((v, i) => {\r\n        let result = others[0].map((ov, oi) => [v, ...ov]);\r\n        //console.log(\"result\", JSON.stringify(result));\r\n        return result;\r\n      })\r\n    } else {\r\n      //console.log(\"others 2\",JSON.stringify(others));\r\n      let permutated = this.permutate2d(others);\r\n      //console.log(\"permutated\", JSON.stringify(permutated ? permutated : null));\r\n      if (permutated) {\r\n        let result = permutated.map((v, i) => {\r\n          return array1D.map((cv, ci) => {\r\n            let ra = [cv, ...v];\r\n            //console.log(\"ra\",JSON.stringify(ra));\r\n            return ra;\r\n          })\r\n        });\r\n        //console.log(\"result\",JSON.stringify(result)); \r\n        return result;\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  permutate2d(array2d) {\r\n    //console.log(\"array2d\", JSON.stringify(array2d));\r\n    let target = array2d.shift();\r\n\r\n    //console.log(\"innerArray\", JSON.stringify(innerArray));\r\n    //console.log(\"array2d\", JSON.stringify(array2d));\r\n    if (array2d.length === 0 ||\r\n      target.length === 0) {\r\n      return null;\r\n    }\r\n    let perm = this.permutate(target, array2d)\r\n      .flat();\r\n    //console.log(\"perm\",JSON.stringify(perm));\r\n    return perm;\r\n  }\r\n\r\n  renderCombos(input) {\r\n    //console.log(JSON.stringify(input));\r\n    return (this.permutate2d(input) || []).map((arr, index) => {\r\n      //console.log(\"arr\",JSON.stringify(arr));\r\n      return (<div key={index}>\r\n        {JSON.stringify(arr)}\r\n      </div>)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"solution\">\r\n        {this.renderCombos.bind(this)(\r\n          this.mapInputs.bind(this)(this.props.input))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App value={'3'} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}